'''
Streamlit app for querying an RDF graph using natural language.
This app uses LangChain to translate natural language queries into SPARQL queries
and then executes them against an RDF graph.

This file is part of the Coptic Metadata Viewer project.

author: sjhuskey
version: 0.1.0
date: 2025-07-28
note: Much of this code was generated by an AI language model (ChatGPT 4o) and may require further refinement.
'''
import streamlit as st
from langchain.llms import Ollama
from langchain.prompts import PromptTemplate
from rdflib import Graph
from SPARQLWrapper import SPARQLWrapper, JSON

# Load RDF graph
g = Graph()
g.parse("data/all.ttl", format="turtle")

# Load the LLM
llm = Ollama(model="mistral")

# Prompt template
with open("prompts/sparql_translate.txt") as f:
    examples = f.read()

template = PromptTemplate.from_template(
    examples + "\n### Natural language:\n{query}\n### SPARQL:"
)

# Streamlit UI
st.title("Ask Your RDF Graph")
user_query = st.text_input("Enter a question in natural language")

if user_query:
    with st.spinner("Translating to SPARQL..."):
        sparql_query = llm(template.format(query=user_query))

    st.code(sparql_query, language="sparql")

    try:
        results = g.query(sparql_query)
        st.success("Results:")
        for row in results:
            st.write([str(val) for val in row])
    except Exception as e:
        st.error(f"SPARQL query failed: {e}")
